useDynLib(refGenome, .registration = TRUE, .fixes = "C_")
## utils: for "head" and "tail" generics
import(methods)
import(utils)
importFrom(doBy,summaryBy)
importFrom(DBI, dbDriver)
importFrom(RSQLite, dbConnect, dbDisconnect,  dbWriteTable, dbReadTable, dbExistsTable)
importFrom("grDevices", "adjustcolor")
importFrom("graphics", "arrows", "axis", "mtext", "par", "plot", "rect")
S3method(plot, geneModel)
S3method(plot, transcriptModel)
exportMethods(
    addIsCoding,
    addIsoforms,
    addEnsembl,
    addXref,
    basedir,
    "basedir<-",
    extractByGeneName,
    extractByGeneId,
    extractFeature,
    extractPaGenes,
    extractSeqids,
    extractTranscript,
    geneList,
    getCdsData,
    getExonData,
    getGeneId,
    getGenePositions,
    getGeneTable,
    geneModel,
    getGtf,
    getSpliceTable,
    getTranscript,
    initialize,
    plotUbs,
    read.gtf,
    refExons,
    saveGenome,
    setGtf,
    tableFeatures,
    tableSeqids,
    tableTranscript.id,
    tableTranscript.name,
    unifyJuncs,
    unifyRanges,
    writeDB,
    getXref
)

exportClasses(
     ensemblGenome,
     ensemblExons,
     ensemblJunctions,
     geneList,
     geneModel,
     transcriptModel,
     unifiedExons,
     ucscExons,
     ucscGenome,
     ucscJunctions
)
export(
    ensemblExons,
    ensemblGenome,
    ensemblJunctions,
    ensPrimAssembly,
    loadGenome,
    loadGenomeDb,
    overlap,
    overlapJuncs,
    plot.geneModel,
    plot.transcriptModel,
    ucPrimAssembly,
    ucscExons,
    ucscGenome,
    ucscJunctions
)
